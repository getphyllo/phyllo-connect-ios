// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 effective-4.2 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name PhylloConnect
import AuthenticationServices
import Foundation
import ImageIO
@_exported import PhylloConnect
import SafariServices
import Swift
import UIKit
import WebKit
import _Concurrency
public class PhylloConfig {
  public init(environment: PhylloEnvironment, clientDisplayName: Swift.String, token: Swift.String, userId: Swift.String, delegate: PhylloConnectDelegate, workPlatformId: Swift.String? = nil)
  @objc deinit
}
extension UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) public func loadGif(name: Swift.String)
  @available(iOS 9.0, *)
  @_Concurrency.MainActor(unsafe) public func loadGif(asset: Swift.String)
}
extension UIKit.UIImage {
  public class func gif(data: Foundation.Data) -> UIKit.UIImage?
  public class func gif(url: Swift.String) -> UIKit.UIImage?
  public class func gif(name: Swift.String) -> UIKit.UIImage?
  @available(iOS 9.0, *)
  public class func gif(asset: Swift.String) -> UIKit.UIImage?
}
public protocol PhylloConnectDelegate : AnyObject {
  func onAccountConnected(account_id: Swift.String, work_platform_id: Swift.String, user_id: Swift.String)
  func onAccountDisconnected(account_id: Swift.String, work_platform_id: Swift.String, user_id: Swift.String)
  func onTokenExpired(user_id: Swift.String)
  func onExit(reason: Swift.String, user_id: Swift.String)
}
@_hasMissingDesignatedInitializers public class PhylloConnect {
  public class var shared: PhylloConnect {
    get
  }
  weak public var phylloConnectDelegate: PhylloConnectDelegate?
  public func initialize(config: PhylloConfig)
  public func open()
  @objc deinit
}
public enum PhylloEnvironment : Swift.String {
  case dev
  case sandbox
  case prod
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension PhylloEnvironment : Swift.Equatable {}
extension PhylloEnvironment : Swift.Hashable {}
extension PhylloEnvironment : Swift.RawRepresentable {}
