// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PhylloConnect
import AuthenticationServices
import Foundation
@_exported import PhylloConnect
import SafariServices
import Swift
import UIKit
import WebKit
import _Concurrency
public struct PhylloConfig {
  public static var shared: PhylloConfig
  public init()
  public var environment: PhylloEnvironment
  public var clientDisplayName: Swift.String
  public var token: Swift.String
  public var userId: Swift.String
  public var workPlatformId: Swift.String
}
public protocol PhylloConnectDelegate : AnyObject {
  func onAccountConnected(account_id: Swift.String, work_platform_id: Swift.String, user_id: Swift.String)
  func onAccountDisconnected(account_id: Swift.String, work_platform_id: Swift.String, user_id: Swift.String)
  func onTokenExpired(user_id: Swift.String)
  func onExit(reason: Swift.String, user_id: Swift.String)
}
@_hasMissingDesignatedInitializers public class PhylloConnect {
  public class var shared: PhylloConnect {
    get
  }
  weak public var phylloConnectDelegate: PhylloConnectDelegate?
  public func initialize(config: PhylloConfig = PhylloConfig())
  public func open()
  @objc deinit
}
public enum PhylloEnvironment : Swift.String {
  case dev
  case sandbox
  case prod
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension PhylloEnvironment : Swift.Equatable {}
extension PhylloEnvironment : Swift.Hashable {}
extension PhylloEnvironment : Swift.RawRepresentable {}
